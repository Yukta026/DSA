Insert Interval
------------------------
Time Complexity - O(N)
Space Complexity - O(N)
------------------------
class Solution {
    public int[][] insert(int[][] intervals, int[] newInterval) {
        List<int[]> ans = new ArrayList<>();
        boolean visited  = false;
        for(int[] interval : intervals){
// If ending range of interval is lesser than start of newInterval then there is no overlap
            if(interval[1] < newInterval[0]){
                ans.add(interval);
            }
            else if(interval[0] > newInterval[1]){
// If starting range of interval is greater than ending of newInterval then there is no overlap
                if(!visited){
// If newInterval hasn't been added to answer arraylist add it
                    ans.add(newInterval);
                    visited = true;
                }
// Add the current interval
                ans.add(interval);
            }
            else{
// If interval overlap, change newInterval to contain the merged interval
                newInterval[0] = Math.min(newInterval[0], interval[0]);
                newInterval[1] = Math.max(newInterval[1], interval[1]);
            }
        }
// If newInterval hasn't been added to answer list add it
        if(!visited){
            ans.add(newInterval);
        }
        return ans.toArray(new int[ans.size()][]);
    }
}
