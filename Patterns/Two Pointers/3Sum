3Sum
-------------------------------------------------------------------------------------
Time Complexity - O(n^2)
Space Complexity - O(1) auxilliary (excluding output), or O(K) if output is included
-------------------------------------------------------------------------------------
class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        int left = 0;
        int right = 0;
        Arrays.sort(nums);
        for(int i=0;i<nums.length-2;i++){
            if(i>0 && nums[i] == nums[i-1]){continue;}
            left = i+1;
            right = nums.length-1;
            
            while(left < right){
            if(nums[i] + nums[left] + nums[right] == 0){
                List<Integer> sol = new ArrayList<>();
                sol.add(nums[i]);
                sol.add(nums[left]);
                sol.add(nums[right]);
                ans.add(sol);
                while(left<right && nums[left] == nums[left+1]){left++;}
                while(left<right && nums[right] == nums[right-1]){right--;}
                left++;
                right--;
            }
            else if(nums[i] + nums[left] + nums[right] > 0){
                right--;
            }
            else{
                left++;
            }}
           
        }
        return ans;
    }
}
