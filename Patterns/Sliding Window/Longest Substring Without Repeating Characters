Longest Substring Without Repeating Characters
----------------------------------------------
Time Complexity- O(N)
Space Complexity - O(min(n,m)) where m- size of character set
----------------------------------------------
class Solution {
    public int lengthOfLongestSubstring(String s) {
      Map<Character,Integer> map = new HashMap<>();
      int left = 0;
      int maxLength = 0;
      
      for(int right=0;right<s.length();right++){
        char c = s.charAt(right);
// Incrementing value of left pointer when map already contains the character
        if(map.containsKey(c)){
            left = Math.max(left,map.get(c)+1);
        }
        map.put(c,right);
        maxLength = Math.max(maxLength,right-left+1);
      }
      return maxLength;
    }
}
