class Solution {
    public boolean isAnagram(String s, String t) {
        // Using frequency count 
        // tc = O(M+N) and sc = O(1)
        if(s.length() != t.length()){
            return false;
        }
        int[] count = new int[26];

        for(char c: s.toCharArray()){
            count[c - 'a']++;
        }
        for(char c: t.toCharArray()){
            count[c - 'a']--;
        }
        for(int i=0;i<26;i++){
            if(count[i] != 0 ){
                return false;
            }
        }
        return true;

        // Using HashMap - tc = O(M+N) and sc = O(M) or O(N)
        if(s.length() != t.length()){
            return false;
        }
        HashMap<Character,Integer> map = new HashMap<>();

        for(char c: s.toCharArray()){
            map.put(c, map.getOrDefault(c, 0)+1);
        }
        for(char c: t.toCharArray())
        {
            if(!map.containsKey(c) || map.get(c) == 0){
                return false;
            }
            map.put(c, map.get(c) -1);
        }
        for(int count: map.values()){
            if(count != 0){
                return false;
            }
        }
        return true;
    }
}
