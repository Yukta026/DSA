//{ Driver Code Starts
import java.io.*;
import java.util.*;

class GfG {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine().trim());

        while (t-- > 0) {
            String[] valueInput = br.readLine().trim().split(" ");
            int[] values = new int[valueInput.length];
            for (int i = 0; i < valueInput.length; i++) {
                values[i] = Integer.parseInt(valueInput[i]);
            }
            String[] weightInput = br.readLine().trim().split(" ");
            int[] weights = new int[weightInput.length];
            for (int i = 0; i < weightInput.length; i++) {
                weights[i] = Integer.parseInt(weightInput[i]);
            }
            int w = Integer.parseInt(br.readLine().trim());
            System.out.println(String.format(
                "%.6f", new Solution().fractionalKnapsack(values, weights, w)));
            System.out.println("~");
        }
    }
}

// } Driver Code Ends


class Solution {
    // tc - O(N log N) + O(N)
    // sc - O(1)
    
    double fractionalKnapsack(int[] values, int[] weights, int W) {
        // code here
        int n = values.length;
        Item[] item = new Item[n];
        for(int i =0;i<n;i++){
            item[i] = new Item(values[i],weights[i]);
        }
        
        Arrays.sort(item, (a,b) -> Double.compare(b.ratio,a.ratio));
        
        double totProf = 0;
        int remainingCapacity = W;
        for(Item it : item){
            if(remainingCapacity >=  it.weight){
                totProf += it.value;
                remainingCapacity -= it.weight;
            }
            else{
                totProf += it.ratio * remainingCapacity;
                break;
            }
        }
        return totProf;
    }
}
class Item{
    int value, weight;
    double ratio;
    
    public Item(int value, int weight){
        this.value = value;
        this.weight = weight;
        this.ratio = (double) value/weight;
    }
}
