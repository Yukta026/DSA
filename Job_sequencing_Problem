import java.util.*;
import java.lang.*;
import java.io.*;
// tc - O(N log N) + O(N) + O(N^2) 
// sc - O(maxDeadline)
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
	 //int[][] Jobs = {{1, 4, 20} , {2, 1, 10} , {3, 1, 40} , {4, 1, 30} };
     int[][] Jobs = {{1, 2, 100} , {2, 1, 19} , {3, 2, 27} , {4, 1, 25} , {5, 1, 15}};
      System.out.print(Arrays.toString(JobScheduling(Jobs)));
	}
    public static int[] JobScheduling(int[][] Jobs) {
        
        
        Arrays.sort(Jobs, (a,b) -> b[2]-a[2] );
        int totProf = 0;
        int count = 0;
        int maxDeadline = -1;
        
        for(int i  = 0;i<Jobs.length;i++){
  
            maxDeadline = Math.max(Jobs[i][1], maxDeadline);
        }
        
        int[] hash = new int[maxDeadline+1];
        Arrays.fill(hash, -1);
        
        for(int i=0;i<Jobs.length;i++){
            for(int j = Jobs[i][1];j>0;j--){
                if(hash[j] == -1){
                    hash[j] = Jobs[i][0];
                    count++;
                    totProf += Jobs[i][2];
                    break;
                }
            }
        }
        int[] output = new int[2];
        output[0] = count;
        output[1] = totProf;
        return output;
    }

}
